package com.example.Student_Library_Management_System.Services;

import com.example.Student_Library_Management_System.Enums.CardStatus;
import com.example.Student_Library_Management_System.Models.Card;
import com.example.Student_Library_Management_System.Models.Student;
import com.example.Student_Library_Management_System.Repositories.StudentRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class StudentService {

    @Autowired
    StudentRepository studentRepository;

    public String createStudent(Student student){

        // Student from the postman is already the basic attribute set



        // Card should be the autogenerated when createStudent function is called
        Card card  = new Card();
        card.setCardStatus(CardStatus.ACTIVATED);  // Card status is being set
        card.setStudent(student);          // Foreign key attribute

        // Let's go to the student
        student.setCard(card);


        // If there was a unidirectional mapping : we had to save both of them,
        // i.e. studentRepo.save () and cardRepo.save().
        // But we are using bidirectional : Child will automatically be saved

        studentRepository.save(student);

        // By cascading effect, child automatically be saved.

        return "Student Entry Added into Data Base and Library Card is Allocated";
    }
}
